<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="h2o-working">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../Program Files/eclipse"/>
    <property name="nds.location" value="../nds"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="stachordRMI.location" value="../stachordRMI"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit4_4.5.0.v20090824/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
    </path>
    <path id="nds.classpath">
        <pathelement location="${nds.location}/."/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="${nds.location}/lib/mailapi.jar"/>
        <pathelement location="${nds.location}/lib/mindterm.jar"/>
    </path>
    <path id="stachordRMI.classpath">
        <pathelement location="${stachordRMI.location}/."/>
        <path refid="nds.classpath"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="${nds.location}/lib/mindterm.jar"/>
    </path>
    <path id="h2o-working.classpath">
        <pathelement location="bin"/>
        <pathelement location="service/wrapper.jar"/>
        <pathelement location="ext/lucene-core-2.2.0.jar"/>
        <pathelement location="ext/org.osgi.core-1.2.0.jar"/>
        <pathelement location="ext/servlet-api-2.4.jar"/>
        <pathelement location="ext/slf4j-api-1.5.0.jar"/>
        <pathelement location="../../../../Program Files/Java/jdk1.6.0_16/lib/tools.jar"/>
        <pathelement location="../org.eclipse.jdt.junit_3.5.0.v20090526-2000.jar"/>
        <pathelement location="../../../../Program Files/eclipse/junit-4.4.jar"/>
        <path refid="nds.classpath"/>
        <path refid="stachordRMI.classpath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/main">
                <exclude name="**/*.launch"/>
                <exclude name="**/.emptyDir"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/test">
                <exclude name="**/*.launch"/>
                <exclude name="**/.emptyDir"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/tools">
                <exclude name="**/*.launch"/>
                <exclude name="**/.emptyDir"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="${nds.location}/build.xml" dir="${nds.location}" inheritAll="false" target="clean"/>
        <ant antfile="${stachordRMI.location}/build.xml" dir="${stachordRMI.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="${nds.location}/build.xml" dir="${nds.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
        <ant antfile="${stachordRMI.location}/build.xml" dir="${stachordRMI.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src/main"/>
            <classpath refid="h2o-working.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src/test"/>
            <classpath refid="h2o-working.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src/tools"/>
            <classpath refid="h2o-working.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="AllTests (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.h2.test.h2o.AllTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="h2o-working.classpath"/>
        </junit>
    </target>
    <target name="DatabaseURL">
        <java classname="org.h2.h2o.util.DatabaseURL" failonerror="true" fork="yes">
            <classpath refid="h2o-working.classpath"/>
        </java>
    </target>
    <target name="H2oProperties">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.h2.h2o.util.H2oProperties" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="h2o-working.classpath"/>
        </junit>
    </target>
    <target name="ReplicaTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.h2.test.h2o.ReplicaTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="h2o-working.classpath"/>
        </junit>
    </target>
    <target name="Server (2)">
        <java classname="org.h2.tools.Server" failonerror="true" fork="yes">
            <arg line="-web -tcp -tcpPort 9191 -browser -webPort 8025"/>
            <classpath refid="h2o-working.classpath"/>
        </java>
    </target>
    <target name="Server (3)">
        <java classname="org.h2.tools.Server" failonerror="true" fork="yes">
            <arg line="-web -tcp -tcpPort 9292 -browser  -webPort 8026"/>
            <classpath refid="h2o-working.classpath"/>
        </java>
    </target>
    <target name="Server">
        <java classname="org.h2.tools.Server" failonerror="true" fork="yes">
            <arg line="-web -tcp -tcpPort 9090 -browser  -webPort 8024"/>
            <classpath refid="h2o-working.classpath"/>
        </java>
    </target>
    <target name="All Servers">
    	<java classname="org.h2.tools.Server" failonerror="true" fork="yes">
            <arg line="-web -tcp -tcpPort 9090 -browser  -webPort 8024"/>
            <classpath refid="h2o-working.classpath"/>
        </java>
        <java classname="org.h2.tools.Server" failonerror="true" fork="yes">
             <arg line="-web -tcp -tcpPort 9292 -browser  -webPort 8026"/>
             <classpath refid="h2o-working.classpath"/>
         </java>
  
    </target>
    <target name="TransactionTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.h2.test.h2o.TransactionTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="h2o-working.classpath"/>
        </junit>
    </target>
    <target name="ChordTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="org.h2.test.h2o.ChordTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="h2o-working.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
